<structure comment="For a scheduler, we generally don't want to create overlapping tasks. This means we don't want to generate a new task if the last one is still running.&#10;In most cases this is straight forward: the task itself still has to be in a non-final state.&#10;However, in some cases it is more complex, suppose you start an asynchronous business process that takes an indeterminate amount of time to finish." name="pipeline">
    <structure name="input">
        <field name="taskScheduleId" pattern="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|[0-9a-fA-F]{32}" type="java.util.UUID"/>
        <field name="taskQueueId" pattern="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|[0-9a-fA-F]{32}" type="java.util.UUID"/>
        <structure definition="java.lang.Object" minOccurs="0" name="properties"/>
    </structure>
    <structure name="output">
        <field name="overlap" type="java.lang.Boolean"/>
    </structure>
</structure>
